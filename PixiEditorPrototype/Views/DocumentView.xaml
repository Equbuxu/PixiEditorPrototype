<UserControl x:Class="PixiEditorPrototype.Views.DocumentView" x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PixiEditorPrototype.Views"
             xmlns:pe="clr-namespace:PixiEditorPrototype"
             xmlns:models="clr-namespace:PixiEditorPrototype.Models"
             xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
             xmlns:behaviors="clr-namespace:PixiEditorPrototype.Behaviors"
             xmlns:converters="clr-namespace:PixiEditorPrototype.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:cmd="mvvm"
             xmlns:vm="clr-namespace:PixiEditorPrototype.ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:DocumentViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="576" d:DesignWidth="1024">
    <UserControl.Resources>
        <converters:IndexToChunkResolutionConverter x:Key="IndexToChunkResolutionConverter"/>
    </UserControl.Resources>
    <DockPanel Background="Gray">
        <Border BorderThickness="1" Background="White" BorderBrush="Black" Width="280" DockPanel.Dock="Right" Margin="5">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <Button Margin="5" Command="{Binding CreateNewLayerCommand}" Width="80">New Layer</Button>
                    <Button Margin="5" Command="{Binding CreateNewFolderCommand}" Width="80">New Folder</Button>
                    <Button Margin="5" Command="{Binding DeleteStructureMemberCommand}" Width="80">Delete</Button>
                </StackPanel>
                <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch" Margin="0,0,0,5">
                    <Button Width="80" Margin="5,0" Command="{Binding CombineCommand}">Merge</Button>
                    <TextBlock Text="{Binding SelectedStructureMember.Opacity, StringFormat=N2}" Margin="5,0" DockPanel.Dock="Right" VerticalAlignment="Center" TextAlignment="Center" d:Text="1.00" Width="30"></TextBlock>
                    <Slider Minimum="0" Maximum="1" SmallChange="0.01" LargeChange="0.1" IsSnapToTickEnabled="True" TickFrequency="0.01" x:Name="opacitySlider"
                            VerticalAlignment="Center" HorizontalAlignment="Stretch"
                            Value="{Binding SelectedStructureMember.Opacity, Mode=OneWay}">
                        <i:Interaction.Behaviors>
                            <behaviors:SliderUpdateBehavior
                                DragValueChanged="{Binding SelectedStructureMember.UpdateOpacityCommand}"
                                DragEnded="{Binding SelectedStructureMember.EndOpacityUpdateCommand}"
                                ValueFromSlider="{Binding ElementName=opacitySlider, Path=Value}"/>
                        </i:Interaction.Behaviors>
                    </Slider>
                </DockPanel>
                <TreeView ItemsSource="{Binding StructureRoot.Children}">
                    <TreeView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <pe:ReversedOrderStackPanel/>
                        </ItemsPanelTemplate>
                    </TreeView.ItemsPanel>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <pe:ReversedOrderStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding ChangeSelectedItemCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type vm:FolderViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" Width="150">
                                <CheckBox VerticalAlignment="Center" Margin="3" IsChecked="{Binding IsSelected}"/>
                                <StackPanel>
                                    <Button Width="18" Command="{Binding MoveUpCommand}">^</Button>
                                    <Button Width="18" Command="{Binding MoveDownCommand}">v</Button>
                                </StackPanel>
                                <Border BorderBrush="Black" BorderThickness="1" Background="Yellow" Margin="5">
                                    <CheckBox VerticalAlignment="Center" Margin="5" IsChecked="{Binding IsVisible}"/>
                                </Border>
                                <TextBox Text="{Binding Name}" Margin="5" Height="20"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type vm:LayerViewModel}">
                            <StackPanel Orientation="Horizontal" Width="150">
                                <CheckBox VerticalAlignment="Center" Margin="3" IsChecked="{Binding IsSelected}"/>
                                <StackPanel>
                                    <Button Width="18" Command="{Binding MoveUpCommand}">^</Button>
                                    <Button Width="18" Command="{Binding MoveDownCommand}">v</Button>
                                </StackPanel>
                                <Border BorderBrush="Black" BorderThickness="1" Margin="5">
                                    <CheckBox VerticalAlignment="Center" Margin="5" IsChecked="{Binding IsVisible}"/>
                                </Border>
                                <TextBox Text="{Binding Name}" Margin="5" Height="20"/>
                            </StackPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </DockPanel>
        </Border>
        <Border BorderThickness="1" Background="White" BorderBrush="Black" DockPanel.Dock="Top" Margin="5">
            <DockPanel>
                <StackPanel Orientation="Horizontal" Background="White">
                    <Button Width="50" Margin="5" Command="{Binding UndoCommand}">Undo</Button>
                    <Button Width="50" Margin="5" Command="{Binding RedoCommand}">Redo</Button>
                    <Button Width="100" Margin="5" Command="{Binding ClearSelectionCommand}">Clear selection</Button>
                    <Button Width="120" Margin="5" Command="{Binding ClearHistoryCommand}">Clear undo history</Button>
                    <ComboBox SelectedIndex="{Binding ResolutionFromView, Converter={StaticResource IndexToChunkResolutionConverter}, Mode=OneWayToSource}" Width="70" Margin="5">
                        <ComboBoxItem>Full</ComboBoxItem>
                        <ComboBoxItem>Half</ComboBoxItem>
                        <ComboBoxItem>Quarter</ComboBoxItem>
                        <ComboBoxItem>Eighth</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBox Width="30" Margin="5" Text="{Binding ResizeWidth}"/>
                    <TextBox Width="30" Margin="5" Text="{Binding ResizeHeight}"/>
                    <Button Width="50" Margin="5" Command="{Binding ResizeCanvasCommand}">Resize</Button>
                </StackPanel>
            </DockPanel>
        </Border>
        <Border BorderThickness="1" Background="White" BorderBrush="Black" DockPanel.Dock="Left" Margin="5">
            <StackPanel Orientation="Vertical" Background="White">
                <Button Width="50" Margin="5" Command="{Binding ChangeActiveToolCommand}" CommandParameter="{x:Static models:Tool.Rectangle}">Rect</Button>
                <Button Width="50" Margin="5" Command="{Binding ChangeActiveToolCommand}" CommandParameter="{x:Static models:Tool.Select}">Select</Button>
                <colorpicker:PortableColorPicker Margin="5" SelectedColor="{Binding SelectedColor, Mode=TwoWay}" Width="30" Height="30"/>
            </StackPanel>
        </Border>
        <Border BorderThickness="1" Background="Transparent" BorderBrush="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
            <Image Margin="5" Source="{Binding RenderBitmap}" Width="400" Height="400" RenderOptions.BitmapScalingMode="NearestNeighbor" x:Name="mainImage">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
        </Border>
    </DockPanel>
</UserControl>
